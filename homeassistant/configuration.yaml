
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  base_url: 192.168.1.123:8123
  # turn off self-signed certs because the Android app can't deal with them
  #ssl_certificate: /config/ssl/cert.crt
  #ssl_key: /config/ssl/cert.key

# https://www.home-assistant.io/integrations/zoneminder/
zoneminder:
  host: 192.168.1.113:8443
  path: /zm/
  ssl: True
  verify_ssl: False

# https://www.home-assistant.io/integrations/zoneminder/#switch
switch:
  - platform: zoneminder
    command_on: Record
    command_off: None

camera:
  - platform: zoneminder
  # https://www.home-assistant.io/integrations/generic_ip_camera/
  - platform: generic
    still_image_url: 'https://radblast.wunderground.com/cgi-bin/radar/WUNIDS_map?num=10&type=N0R&mapx=400&mapy=240&brand=wui&delay=15&frame=0&scale=1&transx=0&transy=0&severe=1&smooth=0&centerx=400&centery=240&station=ABX&rainsnow=1&lightning=0&noclutter=1&showlabels=0&showstorms=0&rand=26384596'
    name: Animated Radar

sensor:
  # https://www.home-assistant.io/integrations/systemmonitor/
  # TODO: how can we define multiple disks/mounts here?
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: swap_use_percent
      - type: load_5m
  # https://www.home-assistant.io/integrations/version/
  - platform: version
  # https://www.home-assistant.io/integrations/zoneminder/
  - platform: zoneminder
    include_archived: False
  # https://www.home-assistant.io/integrations/uptime/
  - platform: uptime
    name: Uptime
    unit_of_measurement: days
  # https://www.home-assistant.io/integrations/sensor.command_line/#cpu-temperature
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, make sure configuration file is encoded as UTF-8
    unit_of_measurement: "Â°F"
    # make sure to set the corresponding unit system in configuration -> general, this seems to override the unit of measurement
    value_template: '{{ (value | multiply(0.001) * 1.8 + 32) | round(1) }}'
  # https://www.home-assistant.io/integrations/rest
  - platform: rest
    # https://www.home-assistant.io/docs/configuration/platform_options/
    scan_interval: 600 # run every 10 minutes, default on local polling of sensors is 30 seconds
    resource: https://192.168.1.113:8443/zm/api/host/getVersion.json
    name: zoneminder_version
    verify_ssl: false
    json_attributes:
      - version
  - platform: rest
    # https://www.home-assistant.io/docs/configuration/platform_options/
    scan_interval: 43200 # run every 12 hours, default on local polling of sensors is 30 seconds
    resource: https://api.github.com/repos/ZoneMinder/zoneminder/releases/latest
    name: zoneminder_latest_release
    verify_ssl: false
    value_template: '1' # dummy value, not used, avoids the "state max length is 255 characters" error
    json_attributes:
      - tag_name
  - platform: mqtt
    name: outside_camera_mqtt_label
    state_topic: "home-assistant/zoneminder/yolo/1/"
    value_template: "{{ value_json.label }}"
  - platform: mqtt
    name: outside_camera_mqtt_path
    state_topic: "home-assistant/zoneminder/yolo/1/"
    value_template: "{{ value_json.img_path }}"
  - platform: mqtt
    name: outside_camera_mqtt_timestamp
    state_topic: "home-assistant/zoneminder/yolo/1/"
    value_template: "{{ value_json.timestamp }}"
  - platform: mqtt
    name: inside_camera_mqtt_label
    state_topic: "home-assistant/zoneminder/yolo/2/"
    value_template: "{{ value_json.label }}"
  - platform: mqtt
    name: inside_camera_mqtt_path
    state_topic: "home-assistant/zoneminder/yolo/2/"
    value_template: "{{ value_json.img_path }}"
  - platform: mqtt
    name: inside_camera_mqtt_timestamp
    state_topic: "home-assistant/zoneminder/yolo/2/"
    value_template: "{{ value_json.timestamp }}"

# https://www.home-assistant.io/lovelace/yaml-mode/
lovelace:
  mode: yaml

# https://community.home-assistant.io/t/picture-for-person-component-and-zone-naming-enhancement-for-home-and-not-home/103835/7
homeassistant:
  customize:
    person.patrick:
      entity_picture: /local/binary_logo.jpg
    input_text.discord_user_id:
      hidden: true # make sure no one can see value on screen

# https://www.home-assistant.io/integrations/input_boolean/
input_boolean:
  alarm:
    name: Toggle Alarm

input_text:
  discord_user_id:
    name: Tagged Discord username
    initial: !secret discord_tagged_user_id

# https://www.home-assistant.io/docs/automation/
automation:
  - alias: 'Turn on camera when away'
    trigger:
      platform: state
      entity_id: input_boolean.alarm
      to: 'on'
    action:
      service: switch.turn_on
      entity_id: switch.insidecamera_state
  - alias: 'Turn off camera when home'
    trigger:
      platform: state
      entity_id: input_boolean.alarm
      to: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.insidecamera_state
  # https://www.home-assistant.io/integrations/notify/
  - alias: 'Send Discord inside person alarm message'
    trigger:
      platform: state
      entity_id:  sensor.inside_camera_mqtt_label
      to: 'person'
    condition:
      - condition: state
        entity_id: input_boolean.alarm
        state: 'on'
    action:
      # turning the service off and then back on after a delay prevents it from spamming
      - service: automation.turn_off
        entity_id: automation.send_discord_inside_person_alarm_message
      - service: notify.discord
        data_template:
          message: "<@{{ states('input_text.discord_user_id') }}> Inside camera alarm! Starting timestamp: {{ states('sensor.inside_camera_mqtt_timestamp') }} - {{ states('sensor.inside_camera_mqtt_path') }}"
          target: !secret discord_channel # channel ID
          data:
            images:
              - "{{ states('sensor.inside_camera_mqtt_path') }}"
      - delay: 00:00:15 # delay so that we don't spam Discord
      - service: automation.turn_on
        entity_id: automation.send_discord_inside_person_alarm_message
        
  # - alias: 'Turn off all lights at sunrise'
  #   trigger:
  #     platform: state
  #     entity_id: sun.sun
  #     to: above_horizon
  #   action:
  #     - service: switch.turn_off
  #       entity_id:  switch.living_room_lamp
  #     - service: switch.turn_off
  #       entity_id:   switch.piano_lamp
  #     - service: switch.turn_off
  #       entity_id:  switch.bedroom_lamp
  # - alias: 'Turn on light when away'
  #   trigger:
  #     platform: state
  #     entity_id: person.patrick
  #     to: not_home
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     - condition: time
  #       before: '22:30:00'
  #   action:
  #     - service: switch.turn_on
  #       entity_id:  switch.living_room_lamp
  # - alias: 'Turn off lights when away and simulate bedtime'
  #   trigger:
  #     platform: state
  #     entity_id: person.patrick
  #     to: not_home
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     - condition: time
  #       after: '22:50:00'
  #   action:
  #     - service: switch.turn_off
  #       entity_id:   switch.piano_lamp
  #     - delay: 00:00:10
  #     - service: switch.turn_off
  #       entity_id:  switch.living_room_lamp
  #     - delay: 00:00:59
  #     - service: switch.turn_off
  #       entity_id:  switch.bedroom_lamp
  # - alias: 'Turn on light when back'
  #   trigger:
  #     platform: state
  #     entity_id: person.patrick
  #     to: home
  #   condition:
  #     - condition: sun
  #       after: sunset
  #   action:
  #     - service: switch.turn_on
  #       entity_id:  switch.living_room_lamp
  #     - delay: 00:02:30
  #     - service: switch.turn_off
  #       entity_id:  switch.living_room_lamp
  # - alias: 'Randomly turn on piano lamp when away'
  #   trigger:
  #     platform: state
  #     entity_id: person.patrick
  #     to: not_home
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     - condition: time
  #       before: '22:30:00'
  #   action:
  #     - service: switch.turn_off
  #       entity_id:  switch.piano_lamp
  #     - delay: '00:0{{ range(5,10) | random | int }}:00'
  #     - service: switch.turn_on
  #       entity_id:  switch.piano_lamp
  #     - delay: '00:0{{ range(5,10) | random | int }}:00'
  # - alias: 'Randomly turn on bedroom lamp when away'
  #   trigger:
  #     platform: state
  #     entity_id: person.patrick
  #     to: not_home
  #   condition:
  #     - condition: sun
  #       after: sunset
  #     - condition: time
  #       before: '22:30:00'
  #   action:
  #     - service: switch.turn_off
  #       entity_id:  switch.bedroom_lamp
  #     - delay: '00:0{{ range(5,10) | random | int }}:00'
  #     - service: switch.turn_on
  #       entity_id:  switch.bedroom_lamp
  #     - delay: '00:0{{ range(5,10) | random | int }}:00'

# https://www.home-assistant.io/integrations/tplink/
tplink:
  discovery: false
  switch:
  - host: 192.168.1.147
  - host: 192.168.1.200
  - host: 192.168.1.188

# https://www.home-assistant.io/integrations/mqtt/
mqtt:
  broker: 192.168.1.113
  port: 1883

# https://www.home-assistant.io/integrations/discord/
notify:
  - platform: discord
    name: Discord
    token: !secret discord_token
