# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
#http:
  # turned off self-signed certs because the Android app can't deal with them
  #ssl_certificate: /config/ssl/cert.crt
  #ssl_key: /config/ssl/cert.key

camera:
  # https://www.home-assistant.io/integrations/generic_ip_camera/
  - platform: generic
    still_image_url: 'https://radblast.wunderground.com/cgi-bin/radar/WUNIDS_map?num=10&type=N0R&mapx=400&mapy=240&brand=wui&delay=15&frame=0&scale=1&transx=0&transy=0&severe=1&smooth=0&centerx=400&centery=240&station=ABX&rainsnow=1&lightning=0&noclutter=1&showlabels=0&showstorms=0&rand=26384596'
    name: Animated Radar
  - platform: generic
    still_image_url: 'http://192.168.1.113:8080/snapshot/inside/person'
    name: Inside Camera Person
  - platform: generic
    still_image_url: 'http://192.168.1.113:8080/snapshot/frontdoor/person'
    name: Frontdoor Camera Person
  - platform: generic
    still_image_url: 'http://192.168.1.113:8080/snapshot/backdoor/person'
    name: Backdoor Camera Person
  # https://www.home-assistant.io/integrations/camera.mqtt/
  - platform: mqtt
    topic: docker-movement-detection/inside
    name: Inside Motion Detected
  - platform: mqtt
    topic: docker-movement-detection/frontdoor
    name: Frontdoor Motion Detected
  - platform: mqtt
    topic: docker-movement-detection/backdoor
    name: Backdoor Motion Detected

sensor:
  # https://www.home-assistant.io/integrations/systemmonitor/
  # TODO: how can we define multiple disks/mounts here?
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: swap_use_percent
      - type: load_5m
  # https://www.home-assistant.io/integrations/version/
  - platform: version
  # https://www.home-assistant.io/integrations/uptime/
  - platform: uptime
    name: Uptime
  # https://www.home-assistant.io/integrations/sensor.command_line/#cpu-temperature
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    # If errors occur, make sure configuration file is encoded as UTF-8
    unit_of_measurement: "Â°F"
    # make sure to set the corresponding unit system in configuration -> general, this seems to override the unit of measurement
    value_template: '{{ (value | multiply(0.001) * 1.8 + 32) | round(1) }}'
  # https://www.home-assistant.io/integrations/rest
  - platform: rest
    # https://www.home-assistant.io/docs/configuration/platform_options/
    scan_interval: 600 # run every 10 minutes, default on local polling of sensors is 30 seconds
    # https://blakeblackshear.github.io/frigate/usage/api#apistats
    resource: http://192.168.1.113:5000/api/stats
    name: frigate_used_space_percentage
    value_template: '{{ ((value_json["service"]["storage"]["/media/frigate/recordings"]["used"] / value_json["service"]["storage"]["/media/frigate/recordings"]["total"]) * 100|float)|round(0) }}'
  # https://www.home-assistant.io/integrations/rest
  - platform: rest
    # https://www.home-assistant.io/docs/configuration/platform_options/
    scan_interval: 43200 # run every 12 hours, default on local polling of sensors is 30 seconds
    resource: https://api.github.com/repos/blakeblackshear/frigate/releases/latest
    name: frigate_latest_release
    value_template: '1' # dummy value, not used, avoids the "state max length is 255 characters" error
    json_attributes:
      - tag_name
  - platform: rest
    # https://www.home-assistant.io/docs/configuration/platform_options/
    scan_interval: 43200 # run every 12 hours, default on local polling of sensors is 30 seconds
    resource: http://192.168.1.113:5000/api/version
    name: frigate_version
    value_template: 'v{{ value.split("-")[0] }}'
  - platform: template
    sensors:
      # https://community.home-assistant.io/t/uptime-in-days-hours-and-minutes/180916/4
      uptime_days:
        value_template: >-
          {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.uptime')) %}
          {% if up_time == 0 %}
            Just restarted...
          {% else %}
            {% set minutes = (up_time // 60) | int %}
            {% set hours = (minutes // 60) %}
            {% set days = (hours // 24) %}
            {% set weeks = (days // 7) %}
            {% set minutes = (minutes % 60) %}
            {% set hours =  (hours % 24) %}
            {% set days = (days % 7) %}
            {% macro phrase(value, name) %}
                      {%- set value = value %}
                      {%- set end = 's' if value > 1 else '' %}
                      {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
            {%- endmacro %}
            {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
            {% set last_comma = text.rfind(',') %}
            {% if last_comma != -1 %}
              {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
            {% endif %}
          {{ text }}
          {% endif %}

# https://www.home-assistant.io/lovelace/yaml-mode/
lovelace:
  mode: yaml

# https://community.home-assistant.io/t/picture-for-person-component-and-zone-naming-enhancement-for-home-and-not-home/103835/7
homeassistant:
  unit_system: imperial
  customize:
    person.patrick:
      entity_picture: /local/binary_logo.jpg
    input_text.discord_user_id:
      hidden: true # make sure no one can see value on screen

# https://www.home-assistant.io/integrations/input_boolean/
input_boolean:
  alarm:
    name: Toggle Alarm

input_text:
  discord_user_id:
    name: Tagged Discord username
    initial: !secret discord_tagged_user_id

# https://www.home-assistant.io/integrations/binary_sensor.template/
binary_sensor:
  - platform: template
    sensors:
      frigate_update:
        value_template: "{{ state_attr('sensor.frigate_latest_release', 'tag_name') > states('sensor.frigate_version') }}"
  - platform: mqtt
    name: inside_person_detected
    state_topic: "watsor/cameras/inside/detection/person/state"
  - platform: mqtt
    name: frontdoor_person_detected
    state_topic: "watsor/cameras/frontdoor/detection/person/state"
  - platform: mqtt
    name: backdoor_person_detected
    state_topic: "watsor/cameras/backdoor/detection/person/state"
  - platform: mqtt
    name: inside_motion_detected
    state_topic: "docker-movement-detection/inside/state"
  - platform: mqtt
    name: frontdoor_motion_detected
    state_topic: "docker-movement-detection/frontdoor/state"
  - platform: mqtt
    name: backdoor_motion_detected
    state_topic: "docker-movement-detection/backdoor/state"

# https://www.home-assistant.io/docs/automation/
automation:
  - alias: 'Motion triggers alarm if alarm set'
    trigger:
      platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_motion_aq2_a2fe8704_ias_zone
      to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.alarm
      - service: notify.notify
        data:
          message: "Motion detector triggered!"
      - service: notify.mobile_app_SMG930V
        data:
          message: TTS
          title: "Motion detector triggered!"
          importance: high
          data:
            channel: "alarm_stream"
  - alias: 'Person detection triggers alarm if alarm set'
    trigger:
      - platform: state
        entity_id: binary_sensor.inside_person_detected
        to: 'on'
      - platform: state
        entity_id: binary_sensor.backdoor_person_detected
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.alarm
  # https://www.home-assistant.io/integrations/notify/
  - alias: 'Send Discord alarm message'
    trigger:
      platform: state
      entity_id: input_boolean.alarm
      to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      # turning the service off and then back on after a delay prevents it from spamming
      - service: automation.turn_off
        entity_id: automation.send_discord_inside_person_alarm_message
      - service: notify.discord
        data_template:
          message: "<@{{ states('input_text.discord_user_id') }}> Alarm!"
          target: !secret discord_channel # channel ID
      - delay: 00:00:15 # delay so that we don't spam Discord
      - service: automation.turn_on
        entity_id: automation.send_discord_inside_person_alarm_message
  - alias: 'Turn on outside lights at night'
    trigger:
      platform: state
      entity_id: sun.sun
      to: below_horizon
    action:
      - service: switch.turn_on
        entity_id: switch.nodeid_4_switch
  - alias: 'Turn off all lights at sunrise'
    trigger:
      platform: state
      entity_id: sun.sun
      to: above_horizon
    action:
      - service: switch.turn_off
        entity_id: switch.office_lamp
      - service: switch.turn_off
        entity_id: switch.office_lamp_second
      - service: switch.turn_off
        entity_id: switch.living_room_lamp
      - service: switch.turn_off
        entity_id: switch.nodeid_4_switch
  - alias: 'Turn off lights when arrive home'
    trigger:
      platform: state
      entity_id: switch.garage_switch
      to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.office_lamp
      - service: switch.turn_off
        entity_id: switch.office_lamp_second
      - service: switch.turn_off
        entity_id: switch.living_room_lamp
  - alias: 'Turn on lights at dusk when away'
    trigger:
      platform: state
      entity_id: sun.sun
      to: below_horizon
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - delay: 00:00:55
      - service: switch.turn_on
        entity_id: switch.office_lamp
      - delay: 00:00:55
      - service: switch.turn_on
        entity_id: switch.office_lamp_second
      - delay: 00:00:55
      - service: switch.turn_on
        entity_id: switch.living_room_lamp
  - alias: 'Turn off lights at bedtime when away'
    trigger:
      platform: state
      entity_id: switch.garage_switch
      to: 'on'
    condition:
      - condition: time
        after: '22:40:00'
    action:
      - service: switch.turn_off
        entity_id: switch.office_lamp
      - delay: 00:00:59
      - service: switch.turn_off
        entity_id: switch.office_lamp_second
      - delay: 00:00:59
      - service: switch.turn_off
        entity_id: switch.living_room_lamp
  - alias: 'Save snapshot from inside camera when person detected'
    trigger:
      platform: state
      entity_id: binary_sensor.inside_person_detected
      to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - service: notify.notify
        data:
          message: "Inside camera person detected!"
      - service: notify.mobile_app_SMG930V
        data:
          message: TTS
          title: "Inside camera person detected!"
          importance: high
          data:
            channel: "alarm_stream"
      - service: camera.snapshot
        target:
          entity_id: camera.inside
        data:
          filename: '/config/www/inside-person.jpg'
      - service: notify.discord
        data_template:
          message: "<@{{ states('input_text.discord_user_id') }}> Intruder, person detected inside!"
          target: !secret discord_channel # channel ID
          data:
            images:
              - "/config/www/inside-person.jpg"
      - delay: 00:00:15 # delay so that we don't spam Discord
  - alias: 'Save snapshot from backdoor camera when person detected'
    trigger:
      platform: state
      entity_id: binary_sensor.backdoor_person_detected
      to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - service: notify.notify
        data:
          message: "Backdoor camera person detected!"
      - service: camera.snapshot
        target:
          entity_id: camera.backdoor
        data:
          filename: '/config/www/backdoor-person.jpg'
      - service: notify.discord
        data_template:
          message: "<@{{ states('input_text.discord_user_id') }}> Intruder, person detected at backdoor!"
          target: !secret discord_channel # channel ID
          data:
            images:
              - "/config/www/backdoor-person.jpg"
      - delay: 00:00:15 # delay so that we don't spam Discord
  - alias: 'Save snapshot from frontdoor camera when person detected'
    trigger:
      platform: state
      entity_id: binary_sensor.frontdoor_person_detected
      to: 'on'
    condition:
      - condition: state
        entity_id: switch.garage_switch
        state: 'on'
    action:
      - service: camera.snapshot
        target:
          entity_id: camera.frontdoor
        data:
          filename: '/config/www/frontdoor-person.jpg'
      - service: notify.discord
        data_template:
          message: "<@{{ states('input_text.discord_user_id') }}> Frontdoor, person detected."
          target: !secret discord_channel # channel ID
          data:
            images:
              - "/config/www/frontdoor-person.jpg"
      - delay: 00:00:15 # delay so that we don't spam Discord
  - alias: 'Notify message from frontdoor camera when person detected'
    trigger:
      platform: state
      entity_id: binary_sensor.frontdoor_person_detected
      to: 'on'
    action:
      - service: notify.notify
        data:
          message: "Person at front door"
      - delay: 00:00:60 # delay so we don't spam messages

# https://www.home-assistant.io/integrations/tplink/
tplink:
  discovery: false
  switch:
  - host: 192.168.1.147 # hs105-1
  - host: 192.168.1.200 # hs105-2
  - host: 192.168.1.188 # hs105-3
  - host: 192.168.1.172 # hs105-4

# https://www.home-assistant.io/integrations/mqtt/
mqtt:
  discovery: true
  broker: 192.168.1.226
  port: 1883
  # https://zwave-js.github.io/zwavejs2mqtt/#/guide/homeassistant
  birth_message:
    topic: 'homeassistant/status'
    payload: 'online'
  will_message:
    topic: 'homeassistant/status'
    payload: 'offline'

notify:
  # https://www.home-assistant.io/integrations/discord/
  - platform: discord
    name: Discord
    token: !secret discord_token

# https://www.home-assistant.io/integrations/zha/
zha:
  # /dev/ttyUSB1
  database_path: /config/zigbee.db
